@model MSSAJobBoard_w_Login.Job

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <h4>Job Title</h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h4>Company Name</h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h4>Job Link (URL)</h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h4>Job Description</h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h4>Recruiter Dropdown</h4>
            <div class="col-md-10">
                @Html.DropDownList("RecruiterId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecruiterId, "", new { @class = "text-danger" })
                <p>Not finding the one you need? Add a new one. Or use "Not Found"</p>
                <p> <a target="_blank" href="~/Recruiters/Create" class="btn btn-primary btn-sm">Add Recruiter</a></p>

            </div>
        </div>

        <div class="form-group">
            <h4>Company Dropdown</h4>
            <div class="col-md-10">
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                <p>Not finding the one you need? Add a new one. Or use "Not Found"</p>
                <p><a target="_blank" href="~/Companies/Create" class="btn btn-primary btn-sm">Add Company</a></p>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
